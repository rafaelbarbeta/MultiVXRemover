import os
import yara
import time
# This class main job is to manage yara rules and compiled rules
class MalwareSignatures:
    RULES = "MultiVXRemoverRules" # directory of "raw" rules
    CRULES = "MultiVXRemoverCompiled" #directory of compiled rules
    def __init__(self,cwd):
        self.cRulesList = []
        self.currentDirectory = cwd
        self.rulesDir = os.path.join(self.currentDirectory,MalwareSignatures.RULES)
        self.cRulesDir = os.path.join(self.currentDirectory,MalwareSignatures.CRULES)
        if not os.path.exists(self.rulesDir):
            os.mkdir(MalwareSignatures.RULES)
        if not os.path.exists(self.currentDirectory):
            os.mkdir(MalwareSignatures.CRULES)
        for root,dir,files in os.walk(self.currentDirectory,topdown=True):
            for fileNames in files:
                self.cRulesList.append(os.path.join(root,fileNames))

    #gets a folder name and add all rules in there, if they are yara rules
    def addRules(self,dirName):
        pass
    #add a single rule
    def addSingleRules(self,rulePath):
        pass
    def removeRules(self,dirID):
        pass
    def removeSingleRule(self,fileName):
        pass
    def getCRulesList(self):
        return self.cRulesList
    def setCRulesList(self,rulesListMod,mode): #mode is a boolean . True to extend list, false to shrink list
        if mode == True:
            self.cRulesList.extend(rulesListMod)
        else:
            while len(rulesListMod) != 0:
                self.cRulesList.remove(rulesListMod[0])
        return
        